[tool.poetry]
name = "yafs"
version = "0.1.0"
description = "Yet Another Flight Scanner"
authors = ["Mateusz Krainski <mateusz@krainski.eu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pytest = "^8.3.4"
playwright = "^1.49.1"
click = "^8.1.7"
python-slugify = "^8.0.4"


[tool.poetry.group.dev.dependencies]
darglint = "^1.8.1"
flake8 = "^7.1.1"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^24.8.19"
flake8-builtins = "^2.5.0"
flake8-comprehensions = "^3.15.0"
flake8-docstrings = "^1.7.0"
flake8-eradicate = "^1.5.0"
flake8-isort = "^6.1.1"
flake8-spellcheck = "^0.28.0"
pep8-naming = "^0.14.1"
flake8-pyproject = "^1.2.3"
black = "^24.10.0"
flake8-black = "^0.3.6"
isort = "^5.13.2"
coverage = "^7.6.9"
ipython = "^8.30.0"
jupyter = "^1.1.1"
pytest-asyncio = "^0.25.0"
jupyter-black = "^0.4.0"
pre-commit = "^4.0.1"

[tool.poetry.group.analysis]
optional = true

[tool.poetry.group.analysis.dependencies]
plotly = "^5.24.1"
pandas = "^2.2.3"
jupyter = "^1.1.1"

[tool.poetry.scripts]
yafs = 'yafs.main:yafs'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
max-line-length = 88
dictionaries = ["en_US", "python", "technical"]
ignore = ["D104", "D100", "D101", "D106"]
per-file-ignores = """
    main.py: D103
    **/tests/*: S101,D103
"""
whitelist = ".spellcheck-allowlist.txt"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.isort]
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88
profile = "black"
known_first_party = ["yafs"]

[tool.poe]
envfile = ".env"

[tool.poe.tasks]
configure = "./scripts/configure.sh"
lint = "flake8 yafs scripts"
test = "coverage run -m pytest --showlocals"
run-hooks = "pre-commit run --all-files"

[tool.poe.tasks.test-full]
sequence = [
  { ref = "test" }
]

[tool.poe.tasks.update]
sequence = [
  { shell = "poetry install" },
  { shell = "poetry run pre-commit autoupdate" },
  { shell = "playwright install" }
]
